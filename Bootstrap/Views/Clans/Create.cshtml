@model Bootstrap.Models.Clan

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Clan</h4>
        @*<hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.Gamertag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gamertag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gamertag, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } }) @* Allows you to edit label, label is tied to model(which is clan class instance), specifically the company variable*@ 
                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" }) @* validates input*@
            </div>
        </div>
        @* 
            The following code creates a submission form which calls the overloaded CREATE() action (action which performs the DB logic), 
            located in the C# file instead of the standard action
            type = submit is the submission attribute, value = Create is the label on the button, idk class input
         *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" /> @*Still dont why it calls the CREATE action in particular and not another [httpPost], maybe its because it is that particular view file *@
            </div>
        </div>
    </div>
}

<p>@ViewBag.Message</p>

<ul>
     @foreach (var item in ViewBag.ProgList)
     {
         <li>@item</li>
     }
</ul>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


